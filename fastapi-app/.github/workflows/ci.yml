name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest black pylint

      - name: Run Black (code formatting)
        run: |
          black --check .

      - name: Run Pylint (code linting)
        run: |
          pylint app --exit-zero

      - name: Run Tests with Pytest (with coverage)
        run: |
          pytest --maxfail=1 --disable-warnings -q \
            --cov=app --cov-report=xml


  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test-lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest

  sonar-analysis:
    runs-on: ubuntu-latest
    needs: build-test-lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java (for SonarQube Scanner)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Install dependencies for tests
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=fastapi-app \
            -Dsonar.sources=app \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
